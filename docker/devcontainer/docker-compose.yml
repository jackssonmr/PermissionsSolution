version: '3.8'

services:
  dev_env:
    container_name: permission-dev
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    depends_on:
      - sqlserver

  sqlserver:
    container_name: sqlsvr-dev
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - "5432:5432"
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: Dell1#admin
      MSSQL_PID: Developer

  kafka:
    container_name: kafka-dev
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      # KRaft settings
      #- KAFKA_CFG_NODE_ID=0
      #- KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      #- KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  zookeeper:
    container_name: zookeeper-dev
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  elasticsearch:
    container_name: elasticsearch-dev
    image: 'bitnami/elasticsearch:latest'
    ports:
      - "9200:9200"